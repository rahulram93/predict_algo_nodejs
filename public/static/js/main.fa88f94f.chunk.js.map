{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["PredictForm","props","state","options","value","handleChange","bind","predictionary","Predictionary","instance","event","target","trim","params","URLSearchParams","fetch","then","res","json","data","words","setState","this","onChange","map","item","React","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAe,I,uBCWTA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,QAAS,GAAIC,MAAO,IAClC,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgBC,IAAcC,WAJlB,E,gDAOnB,SAAaC,GAAQ,IAAD,OAClB,GAAkC,KAA9BA,EAAMC,OAAOP,MAAMQ,OAAvB,CAIA,IAAMC,EAAS,IAAIC,gBAAgB,CACjCV,MAAOM,EAAMC,OAAOP,QAEtBW,MAAM,+BAAiCF,GAAQG,MAAK,SAACC,GACnD,OAAOA,EAAIC,UACVF,MAAM,SAACG,GACR,IAAIC,EAAQD,EAAI,MAChB,EAAKE,SAAS,CAAClB,QAASiB,OAE1BE,KAAKD,SAAS,CAACjB,MAAOM,EAAMC,OAAOP,aAZjCkB,KAAKD,SAAS,CAAClB,QAAS,GAAIC,MAAOM,EAAMC,OAAOP,U,+BAgBpD,c,oBAYA,WACE,OACE,+BACE,8CAEE,uBAAOA,MAAOkB,KAAKpB,MAAME,MAAOmB,SAAUD,KAAKjB,eAC5CiB,KAAKpB,MAAMC,QAAQqB,KAAI,SAAAC,GACtB,OAAQ,sBAAKrB,MAAOqB,EAAZ,cAA+BA,EAA/B,MAAuBA,e,GA7CnBC,IAAMC,WAqDjBC,EA3Df,WACE,OACE,qBAAKC,UAAU,MAAf,SAAqB,cAAC,EAAD,OCKVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fa88f94f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Predictionary from 'predictionary';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\"><PredictForm /></div>\n  );\n}\n\nclass PredictForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {options: [], value: ''};\n    this.handleChange = this.handleChange.bind(this);\n    this.predictionary = Predictionary.instance();\n  }\n\n  handleChange(event) {\n    if (event.target.value.trim() === \"\") {\n      this.setState({options: [], value: event.target.value});\n      return;\n    }\n    const params = new URLSearchParams({\n      value: event.target.value\n    });\n    fetch('http://localhost:3001/words?' + params).then((res) => {\n      return res.json();\n    }).then( (data) => {\n      let words = data[\"words\"];\n      this.setState({options: words});\n    });\n    this.setState({value: event.target.value});\n    //let suggestions = this.predictionary.predict(event.target.value);\n  }\n\n  componentDidMount(){\n    //let that = this;\n    //fetch(\"http://localhost:3001/words\").then((res) => {\n      //return res.json();\n    //}).then((data) => {\n      //let words  = data[\"words\"].map((wd) => {\n        //return {word: wd[0],rank: 50000-wd[1]};\n      //});\n      //that.predictionary.addWords(words);\n    //});\n  }\n\n  render() {\n    return (\n      <form >\n        <label> \n          Type here\n          <input value={this.state.value} onChange={this.handleChange} />\n            {this.state.options.map(item => {\n              return (<div value={item} key={item}> {item} </div>);\n            })}\n        </label>\n      </form>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}